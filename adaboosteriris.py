# -*- coding: utf-8 -*-
"""AdaBoosterIris.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1s0INYJy4t8Garf2gKfB_uWKXRB7rM269
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df=pd.read_csv("/content/Iris.csv")

df.head()

unique_values = df['Species'].unique()
unique_values

df.isnull().sum()

df.describe()

df.shape

df.info()

from sklearn.preprocessing import LabelEncoder
label_encoder = LabelEncoder()
class_mapping = {'Iris-setosa': 0, 'Iris-versicolor': 1, 'Iris-virginica': 2}
df['Class_encoded'] = df['Species'].map(class_mapping)

print(df[['Class_encoded']])

x_train=df[['Id','SepalLengthCm','SepalWidthCm','PetalLengthCm','PetalWidthCm']]
y_train=df["Class_encoded"]

from sklearn.model_selection import train_test_split

x_train,x_test,y_train,y_test=train_test_split(x_train, y_train, test_size=0.2, random_state=42)

df_filled = df.fillna(df.mean())

df_filled

df_filled.shape

df_filled.isnull().sum()



from sklearn.preprocessing import MinMaxScaler

scaler=MinMaxScaler()
x_train_scale = scaler.fit_transform(x_train)

from sklearn.model_selection import train_test_split

x_train_sub, X_valid_sub, y_train_sub, y_valid_sub = train_test_split(x_train_scale, y_train, random_state=0)

from sklearn.ensemble import AdaBoostClassifier
from sklearn.metrics import classification_report, confusion_matrix

gb=AdaBoostClassifier(n_estimators=20, random_state=0)
gb.fit(x_train_sub,y_train_sub)
print("Accuracy scaore(train): {0:3f}".format(gb.score(x_train_sub,y_train_sub)))
print("Accu score (validation): {0:3f}".format(gb.score(X_valid_sub,y_valid_sub)))
print()

