# -*- coding: utf-8 -*-
"""lightGBM.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iX9hqHgwz1UCqc-dWEcdqzAR05b0syq0
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df=pd.read_csv('https://raw.githubusercontent.com/ezioauditore-tech/AI/main/datasets/Breast_cancer_data.csv')

df.info()

df.describe()

df.head()

df.isnull().sum()

x=df[['mean_radius','mean_texture','mean_perimeter','mean_area','mean_smoothness']]
y=df['diagnosis']

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=0)

import lightgbm as lgb
clf=lgb.LGBMClassifier()
clf.fit(x_train,y_train)

y_pred=clf.predict(x_test)

from sklearn.model_selection import GridSearchCV
from sklearn.metrics import accuracy_score
lgb_classifier = lgb.LGBMClassifier()

param_grid = {
   'learning_rate': [0.01, 0.1],
    'n_estimators': [100, 200],
    'max_depth': [3, 5],
    'num_leaves': [20, 10],
    'min_child_samples': [5, 10],
    'subsample': [0.8, 1.0],
    'colsample_bytree': [0.8, 1.0]
}


grid_search = GridSearchCV(lgb_classifier, param_grid, cv=3, scoring='accuracy')
grid_search.fit(x_train, y_train)

print("best parameter " , grid_search.best_params_)
print("best acc ",grid_search.best_score_)

